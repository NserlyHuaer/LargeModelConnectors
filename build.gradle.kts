/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

apply(from = "$rootDir/versionsPlugin.gradle")
plugins {
    application
    `java-library`
    `maven-publish`
    id("org.openjfx.javafxplugin") version "0.1.0"
    id("com.github.ben-manes.versions") version "0.52.0"

}

repositories {
    mavenLocal()
    maven {
        url = uri("https://repo.maven.apache.org/maven2/")
    }
}

javafx {
    version = "21.0.8"
    modules = listOf("javafx.controls", "javafx.fxml", "javafx.web", "javafx.swing","javafx.base", "javafx.graphics")
}

application {
    mainClass = "com.nserly.MainJavaFXRunner"
}

dependencies {
    api(libs.com.google.code.gson.gson)
    api(libs.org.commonmark.commonmark)
    api(libs.org.jsoup.jsoup)
    api(libs.com.vladsch.flexmark.flexmark.all)
    api(libs.org.scilab.forge.jlatexmath)
    api(libs.org.commonmark.commonmark.ext.heading.anchor)
    api(libs.org.commonmark.commonmark.ext.gfm.tables)
    api(libs.com.squareup.okhttp3.okhttp)
    api(libs.com.squareup.okio.okio.jvm)
    api(libs.org.apache.logging.log4j.log4j.api)
    api(libs.org.apache.logging.log4j.log4j.core)
    api(libs.org.apache.logging.log4j.log4j.slf4j2.impl)
    api(libs.org.slf4j.slf4j.api)
    api(libs.org.openjfx.javafx.controls)
    api(libs.org.openjfx.javafx.fxml)
    api(libs.org.openjfx.javafx.web)
    api(libs.org.openjfx.javafx.swing)
    api(libs.org.controlsfx.controlsfx)
    api(libs.com.dlsc.formsfx.formsfx.core)
    api(libs.org.kordamp.ikonli.ikonli.javafx)
    api(libs.org.kordamp.bootstrapfx.bootstrapfx.core)
    api(libs.eu.hansolo.tilesfx)
    testImplementation(libs.org.junit.jupiter.junit.jupiter.api)
    testImplementation(libs.org.junit.jupiter.junit.jupiter.engine)
    compileOnly(libs.org.projectlombok.lombok)
}

group = "com.nserly"
version = "1.0-SNAPSHOT"
description = "LargeModelConnectors"
java.sourceCompatibility = JavaVersion.VERSION_21

sourceSets {
    main {
        resources {
            srcDir("src/main/resources")
        }
    }
}

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

tasks.withType<Javadoc>() {
    options.encoding = "UTF-8"
}
